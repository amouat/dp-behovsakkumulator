name: Build and deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      checks: "write"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 19

      - uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: --configuration-cache build

      - name: Publish results (unit test)
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success() || failure()
        with:
          junit_files: "**/build/test-results/test/TEST-*.xml"

      - uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: :mediator:cyclonedxBom

      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          byosbom: mediator/build/reports/bom.json
          team: teamdagpenger
          tag: ${{ github.sha }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev
    needs: [ build ]
    runs-on: ubuntu-latest
    environment: dev-gcp
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
          PRINT_PAYLOAD: true

#  deploy-prod:
#    name: Deploy to Production
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: .nais/nais.yaml
#          PRINT_PAYLOAD: true